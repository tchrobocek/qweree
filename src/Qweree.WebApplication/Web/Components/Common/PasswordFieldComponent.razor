<MudTextField T="string" Class="@Class" @bind-Value="Value" Label="@Label" Variant="@Variant" InputType="@_inputType" Adornment="Adornment.End" AdornmentIcon="@_inputIcon" OnAdornmentClick="TogglePasswordVisibility"/>

@code {
    private bool _passwordVisibility;
    private InputType _inputType = InputType.Password;
    private string _inputIcon = Icons.Material.Filled.VisibilityOff;
    private string _value = string.Empty;

    [Parameter]
    public string Value
    {
        get => _value;
        set
        {
            if (_value == value ) return;
            _value = value;
            ValueChanged.InvokeAsync(value);
        }
    }

    [Parameter]
    public EventCallback<string> ValueChanged { get; set; }

    [Parameter]
    public string Label { get; set; } = string.Empty;

    [Parameter]
    public Variant Variant { get; set; }

    [Parameter]
    public string Class { get; set; } = string.Empty;

    private void TogglePasswordVisibility()
    {
        if (_passwordVisibility)
        {
            _passwordVisibility = false;
            _inputType = InputType.Password;
            _inputIcon = Icons.Material.Filled.VisibilityOff;
        }
        else
        {
            _passwordVisibility = true;
            _inputType = InputType.Text;
            _inputIcon = Icons.Material.Filled.Visibility;
        }
    }
}