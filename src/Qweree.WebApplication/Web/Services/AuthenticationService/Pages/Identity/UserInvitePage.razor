@page "/services/auth/users/invite"
@using Microsoft.AspNetCore.Authorization
@using Qweree.Authentication.AdminSdk.Authorization
@using Qweree.Authentication.AdminSdk.Authorization.Roles
@using Qweree.Authentication.AdminSdk.Identity
@using Qweree.Authentication.AdminSdk.Identity.Users.UserInvitation
@using Qweree.WebApplication.Infrastructure.Authentication
@using Qweree.WebApplication.Infrastructure.View
@using DialogService = Qweree.WebApplication.Infrastructure.View.DialogService
@attribute [Authorize]
@inject AuthorizationClient AuthorizationClient;
@inject IdentityClient IdentityClient;
@inject NavigationManager NavigationManager;
@inject ClaimsPrincipalStorage Session
@inject DialogService DialogService
@inject ISnackbar Snackbar

<MudCard>
    <MudCardHeader>
        <MudText Typo="Typo.h6">Invite user</MudText>
    </MudCardHeader>
    <MudCardContent>
        <ErrorsComponent Errors="_errors" />
        <MudExpansionPanels MultiExpansion="true" Square="true" DisableBorders="false" Elevation="0">
            <MudExpansionPanel Text="User info" IsInitiallyExpanded="true" Class="mt-0" Style="margin: 0 !important;">
                <MudGrid>
                    <MudItem xs="12">
                        <MudTextField @bind-Value="_username" T="string" Label="Username" Variant="Variant.Outlined"/>
                    </MudItem>
                    <MudItem xs="6">
                        <MudTextField @bind-Value="_contactEmail" T="string" Label="Contact email" Variant="Variant.Outlined"/>
                    </MudItem>
                    <MudItem xs="6">
                        <MudTextField @bind-Value="_fullName" T="string" Label="Full name" Variant="Variant.Outlined"/>
                    </MudItem>
                </MudGrid>
            </MudExpansionPanel>
            <MudExpansionPanel Text="Roles" Class="mt-0" Style="margin: 0 !important;">
                <UserRoleSelectComponent ExcludeGroupRoles="false" SelectedRoles="_roles"/>
            </MudExpansionPanel>
        </MudExpansionPanels>
        <div style="text-align: right;" class="mt-4">
            <MudButton Class="my-6" Variant="Variant.Filled" Color="Color.Primary" Size="Size.Large" OnClick="CreateAsync">Invite user</MudButton>
        </div>
    </MudCardContent>
</MudCard>

@code {
    private readonly List<UserRoleDto> _roles = new();
    private readonly List<string> _errors = new();

    private string? _username;
    private string? _fullName;
    private string? _contactEmail;

    public async Task CreateAsync()
    {
        _errors.Clear();

        var roles = _roles.Select(r => r.Id ?? Guid.Empty);

        if (string.IsNullOrWhiteSpace(_username))
            _username = null;
        if (string.IsNullOrWhiteSpace(_contactEmail))
            _contactEmail = null;
        if (string.IsNullOrWhiteSpace(_fullName))
            _fullName = null;

        var input = new UserInvitationInputDto
        {
            Username = _username,
            Roles = roles.ToArray(),
            ContactEmail = _contactEmail,
            FullName = _fullName
        };

        var response = await IdentityClient.UserInvitationCreateAsync(input);

        if (!response.IsSuccessful)
        {
            var errors = await response.ReadErrorsAsync();
            _errors.AddRange(errors.Errors?.Select(e => e.Message ?? "") ?? Array.Empty<string>());

            if (!_errors.Any())
                _errors.Add(response.StatusCode.ToString());

            return;
        }

        var userInvitationDto = (await response.ReadPayloadAsync())!;
        var link = $"{NavigationManager.BaseUri}invite/{userInvitationDto.Id}";
        await DialogService.AlertAsync("Invitation link", link);
        NavigationManager.NavigateTo("/services/auth/users/list");

        if (!string.IsNullOrWhiteSpace(_username))
        {
            Snackbar.Add($"User {_username} invited.", Severity.Success);
        }
    }
}