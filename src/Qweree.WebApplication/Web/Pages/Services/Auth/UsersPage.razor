@page "/services/auth/users/list"
@using Microsoft.AspNetCore.Authorization
@using Qweree.Authentication.AdminSdk.Identity
@using Qweree.Authentication.AdminSdk.Identity.Users
@using Qweree.WebApplication.Web.Components.Dialog
@attribute [Authorize]
@inject IdentityClient _identityClient
@inject NavigationManager _navigationManager
@inject IDialogService _dialogService

<MudTable Items="@_users" Hover="true" Class="pa-4">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Users</MudText>
        <MudIconButton Title="Refresh" OnClick="RefreshAsync" Icon="@Icons.Material.Filled.Refresh"></MudIconButton>
        <MudSpacer />
        <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Add" Color="Color.Primary" OnClick="AddUser">Add user</MudButton>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Id</MudTh>
        <MudTh>Name</MudTh>
        <MudTh>Email</MudTh>
        <MudTh>Roles</MudTh>
        <MudTh>Modified at</MudTh>
        <MudTh></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Id"><ShortIdComponent Id="@context.Id" /></MudTd>
        <MudTd DataLabel="Role">@context.FullName (@context.Username)</MudTd>
        <MudTd DataLabel="Contact email">@context.ContactEmail</MudTd>
        <MudTd DataLabel="Roles">@string.Join(", ", context.Roles?.Select(r => r.Key) ?? ArraySegment<string?>.Empty)</MudTd>
        <MudTd DataLabel="Modified at"><MudTooltip Text="@context.CreatedAt.ToString()">@context.ModifiedAt</MudTooltip></MudTd>
        <MudTd DataLabel="Actions" Style="text-align: right">
            <MudIconButton Title="Delete" OnClick="() => DeleteAsync(context.Id)" Color="Color.Secondary" Icon="@Icons.Material.Filled.Delete"></MudIconButton>
        </MudTd>
    </RowTemplate>
</MudTable>
<MudGrid>
    <MudItem xs="6">
        <MudIconButton OnClick="PrevPageAsync" Color="Color.Primary" Icon="@Icons.Material.Filled.NavigateBefore"/>
    </MudItem>
    <MudItem xs="6" Style="text-align: right">
        <MudIconButton OnClick="NextPageAsync" Color="Color.Primary" Icon="@Icons.Material.Filled.NavigateNext"/>
    </MudItem>
</MudGrid>

@code {
    private const int Batch = 30;
    private int _pageIndex;
    private readonly List<UserDto> _users = new();

    protected override async Task OnInitializedAsync()
    {
        await RefreshAsync();
    }

    private void AddUser()
    {
        _navigationManager.NavigateTo("/services/auth/users/add");
    }

    private async Task DeleteAsync(Guid? contextId)
    {
        var result = _dialogService.Show<ConfirmDialogComponent>("Confirm", new DialogParameters{{"text", "Do you really want to delete the object?"}});
        var delete = (bool)((await result.Result).Data ?? false);

        if (!delete || contextId == null)
            return;

        await _identityClient.UserDeleteAsync((Guid) contextId);
        await RefreshAsync();
    }


    private async Task RefreshAsync()
    {
        var response = await _identityClient.UsersPaginateAsync(_pageIndex * Batch, Batch, new Dictionary<string, int>());

        if (response.IsSuccessful)
        {
            var payload = await response.ReadPayloadAsync();
            _users.Clear();
            _users.AddRange(payload ?? ArraySegment<UserDto>.Empty);
        }
    }

    private async Task NextPageAsync()
    {
        _pageIndex++;
        await RefreshAsync();

        if (_users.Count == 0)
            await PrevPageAsync();
    }

    private async Task PrevPageAsync()
    {
        _pageIndex--;

        if (_pageIndex < 0)
            _pageIndex = 0;

        await RefreshAsync();
    }
}